---
- hosts: localhost
  remote_user: ubuntu
  connection: local
  become: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    users:
      username: mmujahid

  tasks:
    - name: Update apt cache
      apt:
        update_cache: true
      become: true
      changed_when: false

    - name: Upgrade system
      apt:
        upgrade: dist
      become: true

    - name: Remove unused packages
      apt:
        autoremove: true
      become: true

    - name: Clean apt cache
      apt:
        autoclean: true
      become: true

    - name: configure sudoers
      become: true
      become_user: root
      lineinfile:
        path: /etc/sudoers
        line: "{{ users.username }} ALL=(ALL) NOPASSWD:ALL"
        regexp: "^{{ users.username }}\\s+"
      with_items: "{{ users }}"

    - name: Add an Apt signing key for the brave browser
      apt_key:
        url: https://brave-browser-apt-release.s3.brave.com/brave-core.asc
        state: present
      become: true

    - name: Add specified repository into sources list for brave
      apt_repository:
        repo: deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main
        state: present
      become: true
      
    - name: Add an apt key by id from a keyserver for i3 gaps
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: BDA0E4BA891B327BB00DF1E076458020C35556DC
      become: true
      tags: gaps

    - name: Add specified repository into sources list for i3-gaps
      apt_repository:
        repo:  "{{ item }}"
        state: present
      with_items:
        - deb http://ppa.launchpad.net/kgilmer/speed-ricer/ubuntu bionic main
        - deb-src http://ppa.launchpad.net/kgilmer/speed-ricer/ubuntu bionic main 
      become: true
      tags: gaps

    - name: Install packages
      become: yes
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - feh
          - compton
          - apt-transport-https
          - gnupg
          - flameshot
          - brave-browser
          - pulseaudio
          - pulseaudio-utils
          - redshift-gtk
          - vim
          - neovim
          - docker
          - tig
          - i3
          - i3-wm
          - i3lock
          - i3-gaps
          - zsh
          - zsh-syntax-highlighting
          - rofi
          - breeze-cursor-theme
          - breeze-icon-theme
          - gtk3-engines-breeze
          - lxappearance
          - python3
          - python3-pip
          - python3-venv
          - virtualenv
          - pylint3
          - curl
          - wget
          - tree
          - traceroute
          - tcpdump
          - net-tools
          - network-manager-openconnect
          - network-manager-openvpn
          - network-manager
          - npm
          - manpages
          - blueman
          - cmatrix
          - x11-xserver-utils
          - arandr

    - name: install dotbot
      command: pip3 install dotbot
    
    - block:
      - name: Check if .oh-my-zsh exists
        stat:
          path: ~/.oh-my-zsh
        register: stat_oh_my_zsh_result
    
      - name: Download oh-my-zsh installer
        get_url:
          url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
          dest: /tmp
          mode: '0647'
        when: not stat_oh_my_zsh_result.stat.exists

      - name: Check if installer exists
        stat:
          path: /tmp/install.sh
        register: stat_oh_my_zsh_installer
        
      - name: Execute the zsh-installer.sh
        shell: /tmp/install.sh --unattended
        when: stat_oh_my_zsh_installer.stat.exists
      tags: zsh

    - name: install powerlevel10k
      command: git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

    - name: install Node version manager
      command: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash

    - name: install dotbot
      command: dotbot -c install.conf.yaml

    - name: Need the light binary to control screen brightness
      copy:
        src: ./light
        dest: /usr/local/bin/light
        owner: root
        group: root
        mode: "6755"
      become: yes

    - name: COPY over the xorg.conf
      copy:
        src: ./xorg.conf
        dest: /etc/X11/xorg.conf
        owner: root
        group: root
        mode: "0644"
      become: yes


    - name: install vim plugins
      command: /usr/bin/vim -f -E -s -c "source ~/.vimrc" +PlugInstall +qall
      register: vim_plugins_stdout
      check_mode: false
      changed_when: vim_plugins_stdout.stdout_lines|length != 0

    - name: set default shell for user
      user:
        name: "{{ users.username }}"
        shell: /bin/zsh
